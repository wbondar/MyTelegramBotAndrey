import os
import logging
import random
import requests
from datetime import time
from pytz import timezone
from telegram import Update, ReplyKeyboardMarkup
from telegram.ext import Application, CommandHandler, MessageHandler, filters, CallbackContext, JobQueue

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(format='%(asctime)s - %(name)s - %(levelname)s - %(message)s', level=logging.INFO)
logger = logging.getLogger(__name__)

# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
OAUTH_TOKEN = os.getenv('OAUTH_TOKEN')  # –¢–æ–∫–µ–Ω OAuth
FOLDER_ID = os.getenv('FOLDER_ID')  # –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∫–∞—Ç–∞–ª–æ–≥–∞
TELEGRAM_KEY = os.getenv('TELEGRAM_KEY')  # –¢–æ–∫–µ–Ω Telegram-–±–æ—Ç–∞
CHAT_ID = os.getenv('CHAT_ID')  # ID —á–∞—Ç–∞, –≥–¥–µ –±–æ—Ç –¥–æ–ª–∂–µ–Ω –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è

API_URL = "https://llm.api.cloud.yandex.net/foundationModels/v1/completion"

# –ß–∞—Å–æ–≤–æ–π –ø–æ—è—Å –ú–æ—Å–∫–≤—ã
MSK_TZ = timezone('Europe/Moscow')

# –°–ø–∏—Å–æ–∫ —Å–ª—É—á–∞–π–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
AUTOMATIC_MESSAGES = [
    "–ê–Ω–¥—Ä–µ–π, –¥–µ—Ä–∂–∏—Å—å –±–æ–¥—Ä–µ–π! –ê —Ç–æ –ü–µ—Ç—å–∫–∞ –æ—Ç–º–µ—Ä–∑–Ω–µ—Ç!",
    "–ù—É —á—Ç–æ, –∑–∞—Å–∫—É—á–∞–ª–∏? –¢–∞–∫ –∑–∞–π–º–∏—Ç–µ—Å—å –¥–µ–ª–æ–º!",
    "–ü–æ—Ä–∞ –±—ã –∏ –∑–∞ —Ä–∞–±–æ—Ç—É, –Ω–æ –ª—É—á—à–µ –≤—ã–ø–µ–π—Ç–µ –ø–æ 100 –≥—Ä–∞–º–º!",
    "–ö—Ç–æ –æ—Ö–æ—Ç—á–∏–π –¥–æ –µ–¥—ã, –ø—É—Å—Ç—å –ø–æ–∂–∞–ª—É–µ—Ç —Å—é–¥—ã...",
    "–ß–µ–º –≤—ã –≤–æ–æ–±—â–µ –≤–æ—Ç –∑–∞–Ω–∏–º–∞–µ—Ç–µ—Å—å, —á—Ç–æ —è –¥–æ–ª–∂–µ–Ω –≤–∞—Å –≤—Å–µ –≤—Ä–µ–º—è –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä–æ–≤–∞—Ç—å?",
    "–ê–Ω–¥—Ä–µ–π! –ü—Ä–µ–∫—Ä–∞—Ç–∏ –≠–¢–û –¥–µ–ª–∞—Ç—å! –ö–æ–ª–ª–µ–≥–∏ –º–æ–≥—É—Ç —É–≤–∏–¥–µ—Ç—å!",
    "–®–∞–π—Ç–∞–Ω—ã, –Ω—É –≤—ã —á–µ–≥–æ? –ö—Ç–æ —ç—Ç–æ –æ–ø—è—Ç—å —Ç–∞–∫—É—é –∫—É—á—É –Ω–∞–≤–∞–ª—è–ª?!",
    "–°–∞–Ω—è, —Ä–∞—Å—Å–∫–∞–∂–∏ –ø—Ä–æ –ë–ê–ë –∏ –ø—Ä–æ –∂–µ–Ω—â–∏–Ω!",
    "–í–∞–¥–∏–∫, –ø—Ä–æ—Å–Ω–∏—Å—å! –¢–µ–±—è –≤—Å–µ –∏—â—É—Ç!",
    "–ü–µ—Ä—Ü—ã, —Ä–∞—Å—Å–∫–∞–∑—ã–≤–∞–π—Ç–µ –∫–æ–º—É —á—Ç–æ —Å–Ω–∏–ª–æ—Å—å —Å–µ–≥–æ–¥–Ω—è?",
    "–ú–ï–†–ù–ï–ú –î–ñ–ê–ù–ò–î - –∑–Ω–∞—á–∏—Ç –Ω–∞ –∞—Ä–º—è–Ω—Å–∫–æ–º (–î–∞–π –º–Ω–µ —É–º–µ—Ä–µ—Ç—å –Ω–∞ —Ç–≤–æ–µ–º —Ç–µ–ª–µ!)",
    "- –≠—Ö –Ø–±–ª–æ—á–∫–æ –¥–∞ –Ω–∞ —Ç–∞—Ä–µ–ª–æ—á–∫–µ - –ü–æ–≥–∏–±–∞–π –∂–µ —Ç—ã –ö–û–ù–¢–†–ê –≤ –ø–µ—Ä–µ—Å—Ç—Ä–µ–ª–æ—á–∫–µ!",
]

# –§–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
MORNING_MESSAGE = "–í—Å—Ç–∞–≤–∞–π—Ç–µ, –ó–∞—Å—Ä–∞–Ω—Ü—ã –∏ –¥–∞–≤–∞–π—Ç–µ —Ä–∞–±–æ—Ç–∞–π—Ç–µ –Ω–∞–¥ —Å–æ–±–æ–π –∏ –Ω–∞ –¥–µ—Ä–∂–∞–≤—É!"
NIGHT_MESSAGE = "–ü–æ—Ä–∞ —Å–ø–∞—Ç—å, –ó–∞—Å—Ä–∞–Ω—Ü—ã! –ó–∞–≤—Ç—Ä–∞ –≤—Å–µ –æ–ø—è—Ç—å –Ω–∞ —Ä–∞–±–æ—Ç—É, –Ω–µ –ø—Ä–æ—Å–ø–∏—Ç–µ!"

MAX_HISTORY = 20  # –•—Ä–∞–Ω–∏–º 20 –ø–æ—Å–ª–µ–¥–Ω–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π


async def start(update: Update, context: CallbackContext) -> None:
    """–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–æ–π –º–µ–Ω—é."""
    keyboard = [["/random", "/schedule"]]
    reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)

    await update.message.reply_text(
        "–û–û–û–û-–æ-–æ-–æ-–æ! –ö–æ–≥–æ —è –≤–∏–∂—É! –ó–¥–æ—Ä–æ–≤–∞, –ü–µ—Ä—Ü—ã!!! –ü–æ–∫–∞–ª—è–∫–∞–µ–º?!\n\n"
        "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n"
        "üîπ /random ‚Äî —Å–ª—É—á–∞–π–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ\n"
        "üîπ /schedule ‚Äî –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è\n",
        reply_markup=reply_markup
    )
    context.user_data["history"] = []  # –°–±—Ä–∞—Å—ã–≤–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é


async def send_random_message(update: Update, context: CallbackContext) -> None:
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–ª—É—á–∞–π–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–∏ –∫–æ–º–∞–Ω–¥–µ /random."""
    message = random.choice(AUTOMATIC_MESSAGES)
    await update.message.reply_text(message)


async def check_schedule(update: Update, context: CallbackContext) -> None:
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –≤–∫–ª—é—á–µ–Ω–æ –ª–∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ."""
    await update.message.reply_text("‚úÖ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π –∞–∫—Ç–∏–≤–Ω–æ –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç!")


async def send_scheduled_message(context: CallbackContext) -> None:
    """–û—Ç–ø—Ä–∞–≤–∫–∞ —Å–ª—É—á–∞–π–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—é."""
    chat_id = context.job.context
    message = random.choice(AUTOMATIC_MESSAGES)
    await context.bot.send_message(chat_id=chat_id, text=message)


async def send_morning_message(context: CallbackContext) -> None:
    """–û—Ç–ø—Ä–∞–≤–∫–∞ —É—Ç—Ä–µ–Ω–Ω–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è."""
    chat_id = context.job.context
    await context.bot.send_message(chat_id=chat_id, text=MORNING_MESSAGE)


async def send_night_message(context: CallbackContext) -> None:
    """–û—Ç–ø—Ä–∞–≤–∫–∞ –≤–µ—á–µ—Ä–Ω–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è."""
    chat_id = context.job.context
    await context.bot.send_message(chat_id=chat_id, text=NIGHT_MESSAGE)


def schedule_messages(job_queue: JobQueue):
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è."""
    if not CHAT_ID:
        logger.error("–û—à–∏–±–∫–∞: CHAT_ID –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!")
        return False

    job_queue.run_daily(send_morning_message, time(hour=8, minute=0, tzinfo=MSK_TZ), context=CHAT_ID)
    job_queue.run_daily(send_night_message, time(hour=22, minute=0, tzinfo=MSK_TZ), context=CHAT_ID)

    for hour in [10, 12, 14, 16, 18, 20]:
        job_queue.run_daily(send_scheduled_message, time(hour=hour, minute=0, tzinfo=MSK_TZ), context=CHAT_ID)

    return True


def main() -> None:
    """–ó–∞–ø—É—Å–∫ Telegram-–±–æ—Ç–∞."""
    if not TELEGRAM_KEY:
        logger.error("–û—à–∏–±–∫–∞: TELEGRAM_KEY –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!")
        return

    application = Application.builder().token(TELEGRAM_KEY).build()

    application.add_handler(CommandHandler("start", start))
    application.add_handler(CommandHandler("random", send_random_message))
    application.add_handler(CommandHandler("schedule", check_schedule))

    if schedule_messages(application.job_queue):
        application.bot.send_message(chat_id=CHAT_ID, text="‚úÖ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω–æ!")

    logger.info("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ –æ–∂–∏–¥–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è...")
    application.run_polling()


if __name__ == '__main__':
    main()
